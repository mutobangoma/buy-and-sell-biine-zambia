import React, { useState, useEffect } from "react";
import { BrowserRouter as Router, Route, Routes } from "react-router-dom";
import { getFirestore, collection, getDocs, addDoc } from "firebase/firestore";
import { getAuth, signInWithPopup, GoogleAuthProvider, onAuthStateChanged, signOut } from "firebase/auth";
import { initializeApp } from "firebase/app";
import { Button } from "@/components/ui/button";

const firebaseConfig = {
  apiKey: "YOUR_API_KEY",
  authDomain: "YOUR_PROJECT_ID.firebaseapp.com",
  projectId: "YOUR_PROJECT_ID",
  storageBucket: "YOUR_PROJECT_ID.appspot.com",
  messagingSenderId: "YOUR_SENDER_ID",
  appId: "YOUR_APP_ID"
};

const app = initializeApp(firebaseConfig);
const db = getFirestore(app);
const auth = getAuth(app);

const Home = () => {
  const [ads, setAds] = useState([]);

  useEffect(() => {
    const fetchAds = async () => {
      const querySnapshot = await getDocs(collection(db, "ads"));
      const data = querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));
      setAds(data);
    };
    fetchAds();
  }, []);

  return (
    <div className="p-4">
      <h1 className="text-xl font-bold mb-4">Classified Ads</h1>
      {ads.map(ad => (
        <div key={ad.id} className="border rounded-xl p-4 shadow mb-4">
          <h2 className="text-lg font-semibold">{ad.title}</h2>
          <p>{ad.description}</p>
        </div>
      ))}
    </div>
  );
};

const PostAd = () => {
  const [title, setTitle] = useState("");
  const [description, setDescription] = useState("");

  const handleSubmit = async (e) => {
    e.preventDefault();
    await addDoc(collection(db, "ads"), { title, description, createdAt: Date.now() });
    setTitle("");
    setDescription("");
    alert("Ad posted successfully!");
  };

  return (
    <div className="p-4">
      <h1 className="text-xl font-bold mb-4">Post an Ad</h1>
      <form onSubmit={handleSubmit} className="space-y-4">
        <input value={title} onChange={e => setTitle(e.target.value)} placeholder="Title" className="w-full p-2 border rounded" required />
        <textarea value={description} onChange={e => setDescription(e.target.value)} placeholder="Description" className="w-full p-2 border rounded" required />
        <Button type="submit">Post Ad</Button>
      </form>
    </div>
  );
};

const AuthButton = () => {
  const [user, setUser] = useState(null);

  useEffect(() => {
    const unsubscribe = onAuthStateChanged(auth, (user) => setUser(user));
    return () => unsubscribe();
  }, []);

  const login = () => {
    const provider = new GoogleAuthProvider();
    signInWithPopup(auth, provider);
  };

  const logout = () => {
    signOut(auth);
  };

  return (
    <div className="p-4 flex justify-end">
      {user ? (
        <>
          <span className="mr-2">Hello, {user.displayName}</span>
          <Button onClick={logout}>Logout</Button>
        </>
      ) : (
        <Button onClick={login}>Login with Google</Button>
      )}
    </div>
  );
};

export default function App() {
  return (
    <Router>
      <AuthButton />
      <Routes>
        <Route path="/" element={<Home />} />
        <Route path="/post" element={<PostAd />} />
      </Routes>
    </Router>
  );
}
